[ ] write stdev
[ ] prepare storage in next free entry
[ ] rename reset to clear
[ ] cumulative statistics sum x, sum x**2, avg and stdev
[x] find lon, lat, heading
[x] forward and backward direction

from lat/lon find nearest point

meters -> degrees formula (haversin derivative)
lat/lon degrees to integer, one unit approx 64 m
hashing to lat/lon 32x32 grid
linked list search 4-points, center and nearby 3
(if x in quadrant is < quadrant_size/2 ? -1 : +1)
iterate linked list and find least distance


delta lat/lon to meters
function measure(lat1, lon1, lat2, lon2){  // generally used geo measurement function
    var R = 6378.137; // Radius of earth in KM
    var dLat = lat2 * Math.PI / 180 - lat1 * Math.PI / 180;
    var dLon = lon2 * Math.PI / 180 - lon1 * Math.PI / 180;
    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
    Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
    Math.sin(dLon/2) * Math.sin(dLon/2);
    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
    var d = R * c;
    return d * 1000; // meters
}

The Math.atan2() function returns the angle in the plane (in radians)
between the positive x-axis and the ray from (0,0) to the point (x,y),
for Math.atan2(y,x).

see also
http://www.edwilliams.org/avform147.htm
